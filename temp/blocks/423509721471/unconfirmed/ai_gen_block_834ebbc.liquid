{% doc %}
  @prompt
    An interactive vertical timeline that highlights as the user scrolls

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-timeline-container-{{ ai_gen_id }} {
    max-width: 800px;
    margin: 0 auto;
    padding: 40px 20px;
    position: relative;
  }

  .ai-timeline-line-{{ ai_gen_id }} {
    position: absolute;
    left: 50%;
    top: 0;
    bottom: 0;
    width: 4px;
    background-color: {{ block.settings.line_color }};
    transform: translateX(-50%);
    z-index: 1;
  }

  .ai-timeline-progress-{{ ai_gen_id }} {
    position: absolute;
    left: 50%;
    top: 0;
    width: 4px;
    background-color: {{ block.settings.active_line_color }};
    transform: translateX(-50%);
    z-index: 2;
    transition: height 0.3s ease;
    height: 0%;
  }

  .ai-timeline-item-{{ ai_gen_id }} {
    position: relative;
    margin-bottom: 60px;
    display: flex;
    align-items: center;
    opacity: 0.5;
    transition: opacity 0.5s ease;
  }

  .ai-timeline-item-{{ ai_gen_id }}.active {
    opacity: 1;
  }

  .ai-timeline-item-{{ ai_gen_id }}:nth-child(odd) {
    flex-direction: row;
  }

  .ai-timeline-item-{{ ai_gen_id }}:nth-child(even) {
    flex-direction: row-reverse;
  }

  .ai-timeline-content-{{ ai_gen_id }} {
    flex: 1;
    padding: 20px;
    background-color: {{ block.settings.content_background }};
    border-radius: {{ block.settings.content_border_radius }}px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    margin: 0 30px;
    position: relative;
  }

  .ai-timeline-item-{{ ai_gen_id }}:nth-child(odd) .ai-timeline-content-{{ ai_gen_id }}::after {
    content: '';
    position: absolute;
    right: -10px;
    top: 50%;
    transform: translateY(-50%);
    width: 0;
    height: 0;
    border-left: 10px solid {{ block.settings.content_background }};
    border-top: 10px solid transparent;
    border-bottom: 10px solid transparent;
  }

  .ai-timeline-item-{{ ai_gen_id }}:nth-child(even) .ai-timeline-content-{{ ai_gen_id }}::after {
    content: '';
    position: absolute;
    left: -10px;
    top: 50%;
    transform: translateY(-50%);
    width: 0;
    height: 0;
    border-right: 10px solid {{ block.settings.content_background }};
    border-top: 10px solid transparent;
    border-bottom: 10px solid transparent;
  }

  .ai-timeline-dot-{{ ai_gen_id }} {
    width: {{ block.settings.dot_size }}px;
    height: {{ block.settings.dot_size }}px;
    border-radius: 50%;
    background-color: {{ block.settings.dot_color }};
    border: 4px solid {{ block.settings.dot_border_color }};
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    z-index: 3;
    transition: all 0.3s ease;
  }

  .ai-timeline-item-{{ ai_gen_id }}.active .ai-timeline-dot-{{ ai_gen_id }} {
    background-color: {{ block.settings.active_dot_color }};
    border-color: {{ block.settings.active_dot_border_color }};
    transform: translateX(-50%) scale(1.2);
  }

  .ai-timeline-date-{{ ai_gen_id }} {
    font-size: {{ block.settings.date_font_size }}px;
    color: {{ block.settings.date_color }};
    font-weight: 600;
    margin-bottom: 8px;
  }

  .ai-timeline-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_font_size }}px;
    color: {{ block.settings.title_color }};
    font-weight: 700;
    margin-bottom: 12px;
    margin-top: 0;
  }

  .ai-timeline-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_font_size }}px;
    color: {{ block.settings.description_color }};
    line-height: 1.6;
    margin: 0;
  }

  @media screen and (max-width: 768px) {
    .ai-timeline-line-{{ ai_gen_id }},
    .ai-timeline-progress-{{ ai_gen_id }} {
      left: 20px;transform: none;
    }

    .ai-timeline-item-{{ ai_gen_id }},
    .ai-timeline-item-{{ ai_gen_id }}:nth-child(even) {
      flex-direction: row;
    }

    .ai-timeline-content-{{ ai_gen_id }} {
      margin-left: 50px;
      margin-right: 0;
    }

    .ai-timeline-content-{{ ai_gen_id }}::after,
    .ai-timeline-item-{{ ai_gen_id }}:nth-child(even) .ai-timeline-content-{{ ai_gen_id }}::after {
      left: -10px;
      right: auto;
      border-right: 10px solid {{ block.settings.content_background }};
      border-left: none;
    }

    .ai-timeline-dot-{{ ai_gen_id }} {
      left: 20px;
      transform: translateX(-50%);
    }

    .ai-timeline-item-{{ ai_gen_id }}.active .ai-timeline-dot-{{ ai_gen_id }} {
      transform: translateX(-50%) scale(1.2);
    }
  }
{% endstyle %}

<scroll-timeline-{{ ai_gen_id }}
  class="ai-timeline-container-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-timeline-line-{{ ai_gen_id }}"></div>
  <div class="ai-timeline-progress-{{ ai_gen_id }}"></div>

  {% for i in (1..5) %}
    {% liquid
      assign enabled_key = 'item_' | append: i | append: '_enabled'
      assign date_key = 'item_' | append: i | append: '_date'
      assign title_key = 'item_' | append: i | append: '_title'
      assign description_key = 'item_' | append: i | append: '_description'
      assign enabled = block.settings[enabled_key]
      assign date = block.settings[date_key]
      assign title = block.settings[title_key]
      assign description = block.settings[description_key]
    %}

    {% if enabled %}
      <div class="ai-timeline-item-{{ ai_gen_id }}" data-timeline-item>
        <div class="ai-timeline-content-{{ ai_gen_id }}">
          {% if date != blank %}
            <div class="ai-timeline-date-{{ ai_gen_id }}">{{ date }}</div>
          {% endif %}
          {% if title != blank %}
            <h3 class="ai-timeline-title-{{ ai_gen_id }}">{{ title }}</h3>
          {% endif %}
          {% if description != blank %}
            <div class="ai-timeline-description-{{ ai_gen_id }}">{{ description }}</div>
          {% endif %}
        </div>
        <div class="ai-timeline-dot-{{ ai_gen_id }}"></div>
      </div>
    {% endif %}
  {% endfor %}
</scroll-timeline-{{ ai_gen_id }}>

<script>(function() {
    class ScrollTimeline{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.items = [];
        this.progressLine = null;
        this.observer = null;
      }

      connectedCallback() {
        this.items = Array.from(this.querySelectorAll('[data-timeline-item]'));
        this.progressLine = this.querySelector('.ai-timeline-progress-{{ ai_gen_id }}');
        if (this.items.length === 0) return;

        this.setupIntersectionObserver();
        this.updateProgress();
      }

      disconnectedCallback() {
        if (this.observer) {
          this.observer.disconnect();
        }
      }

      setupIntersectionObserver() {
        const options = {
          root: null,
          rootMargin: '-50% 0px -50% 0px',
          threshold: 0
        };

        this.observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('active');
            } else {
              entry.target.classList.remove('active');
            }
          });
          this.updateProgress();
        }, options);

        this.items.forEach(item => {
          this.observer.observe(item);
        });
      }

      updateProgress() {
        const activeItems = this.querySelectorAll('.ai-timeline-item-{{ ai_gen_id }}.active');
        const totalItems = this.items.length;
        if (totalItems === 0) return;

        let progressPercentage = 0;
        
        if (activeItems.length > 0) {
          const lastActiveItem = activeItems[activeItems.length - 1];
          const itemIndex = this.items.indexOf(lastActiveItem);
          progressPercentage = ((itemIndex + 1) / totalItems) * 100;
        }

        if (this.progressLine) {
          this.progressLine.style.height = progressPercentage + '%';
        }
      }
    }

    customElements.define('scroll-timeline-{{ ai_gen_id }}', ScrollTimeline{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Scroll Timeline",
  "settings": [
    {
      "type": "header",
      "content": "Timeline Style"
    },
    {
      "type": "color",
      "id": "line_color",
      "label": "Timeline line color",
      "default": "#e0e0e0"
    },
    {
      "type": "color",
      "id": "active_line_color",
      "label": "Active line color",
      "default": "#007acc"
    },
    {
      "type": "color",
      "id": "content_background",
      "label": "Content background",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "content_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Content border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Timeline Dots"
    },
    {
      "type": "range",
      "id": "dot_size",
      "min": 12,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Dot size",
      "default": 16
    },
    {
      "type": "color",
      "id": "dot_color",
      "label": "Dot color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "dot_border_color",
      "label": "Dot border color",
      "default": "#e0e0e0"
    },
    {
      "type": "color",
      "id": "active_dot_color",
      "label": "Active dot color",
      "default": "#007acc"
    },
    {
      "type": "color",
      "id": "active_dot_border_color",
      "label": "Active dot border color",
      "default": "#007acc"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "date_font_size",
      "min": 10,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Date font size",
      "default": 14
    },
    {
      "type": "color",
      "id": "date_color",
      "label": "Date color",
      "default": "#666666"
    },
    {
      "type": "range",
      "id": "title_font_size",
      "min": 16,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Title font size",
      "default": 20
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "description_font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Description font size",
      "default": 16
    },
    {
      "type": "color",
      "id": "description_color",
      "label": "Description color",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Timeline Item 1"
    },
    {
      "type": "checkbox",
      "id": "item_1_enabled",
      "label": "Enable item 1",
      "default": true
    },
    {
      "type": "text",
      "id": "item_1_date",
      "label": "Date",
      "default": "2020"
    },
    {
      "type": "text",
      "id": "item_1_title",
      "label": "Title",
      "default": "Company Founded"
    },
    {
      "type": "textarea",
      "id": "item_1_description",
      "label": "Description",
      "default": "Our journey began with a simple idea and a passion for innovation."
    },
    {
      "type": "header",
      "content": "Timeline Item 2"
    },
    {
      "type": "checkbox",
      "id": "item_2_enabled",
      "label": "Enable item 2",
      "default": true
    },
    {
      "type": "text",
      "id": "item_2_date",
      "label": "Date",
      "default": "2021"
    },
    {
      "type": "text",
      "id": "item_2_title",
      "label": "Title",
      "default": "First Product Launch"
    },
    {
      "type": "textarea",
      "id": "item_2_description",
      "label": "Description",
      "default": "We launched our first product and received overwhelming positive feedback."
    },
    {
      "type": "header",
      "content": "Timeline Item 3"
    },
    {
      "type": "checkbox",
      "id": "item_3_enabled",
      "label": "Enable item 3",
      "default": true
    },
    {
      "type": "text",
      "id": "item_3_date",
      "label": "Date",
      "default": "2022"
    },
    {
      "type": "text",
      "id": "item_3_title",
      "label": "Title",
      "default": "Major Expansion"
    },
    {
      "type": "textarea",
      "id": "item_3_description",
      "label": "Description",
      "default": "We expanded our operations and reached new markets worldwide."
    },
    {
      "type": "header",
      "content": "Timeline Item 4"
    },
    {
      "type": "checkbox",
      "id": "item_4_enabled",
      "label": "Enable item 4",
      "default": true
    },
    {
      "type": "text",
      "id": "item_4_date",
      "label": "Date",
      "default": "2023"
    },
    {
      "type": "text",
      "id": "item_4_title",
      "label": "Title",
      "default": "Innovation Award"
    },
    {
      "type": "textarea",
      "id": "item_4_description",
      "label": "Description",
      "default": "Our innovative approach was recognized with a prestigious industry award."
    },
    {
      "type": "header",
      "content": "Timeline Item 5"
    },
    {
      "type": "checkbox",
      "id": "item_5_enabled",
      "label": "Enable item 5",
      "default": true
    },
    {
      "type": "text",
      "id": "item_5_date",
      "label": "Date",
      "default": "2024"
    },
    {
      "type": "text",
      "id": "item_5_title",
      "label": "Title",
      "default": "Future Vision"
    },
    {
      "type": "textarea",
      "id": "item_5_description",
      "label": "Description",
      "default": "Looking ahead, we continue to innovate and shape the future of our industry."
    }
  ],
  "presets": [
    {
      "name": "Scroll Timeline"
    }
  ],
  "tag": null
}
{% endschema %}